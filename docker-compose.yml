version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: benchmark-postgres
    environment:
      POSTGRES_DB: service_mesh_benchmark
      POSTGRES_USER: benchmark
      POSTGRES_PASSWORD: benchmark_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U benchmark"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - benchmark-network

  # Redis for Job Queue
  redis:
    image: redis:7-alpine
    container_name: benchmark-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - benchmark-network

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: benchmark-api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://benchmark:benchmark_dev_password@postgres:5432/service_mesh_benchmark
      REDIS_URL: redis://redis:6379/0
      REDIS_ENABLED: "true"
      DEBUG: "true"
      ALLOWED_ORIGINS: "http://localhost:3000,http://localhost:8000"
    volumes:
      - ./api:/app/api
      - ./benchmarks/results:/app/benchmarks/results
      - ~/.kube:/root/.kube:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - benchmark-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: benchmark-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - benchmark-network

  # Grafana Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: benchmark-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - benchmark-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  benchmark-network:
    driver: bridge
